<?xml version="1.0"?>
<!--Phoronix Test Suite v3.2.0 (Grimstad)-->
<PhoronixTestSuite>
  <SuiteInformation>
    <Title>ltsp-client-test</Title>
    <Version>1.0.0</Version>
    <TestType>System</TestType>
    <Description>LTSP Client Test</Description>
    <Maintainer>mr-eg</Maintainer>
  </SuiteInformation>
  <Execute>
    <Test>pts/xrender</Test>
  </Execute>
  <Execute>
    <Test>pts/opengl-demos</Test>
  </Execute>
  <Execute>
    <Test>pts/video-encoding</Test>
  </Execute>
  <Execute>
    <Test>pts/cryptography</Test>
  </Execute>
  <Execute>
    <Test>pts/mesa</Test>
  </Execute>
  <Execute>
    <Test>pts/network</Test>
  </Execute>
  <Execute>
    <Test>pts/memory</Test>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 32 -t 4</Arguments>
    <Description>Test: Write - Size Per Thread: 32MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 32 -t 8</Arguments>
    <Description>Test: Write - Size Per Thread: 32MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 32 -t 16</Arguments>
    <Description>Test: Write - Size Per Thread: 32MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 32 -t 32</Arguments>
    <Description>Test: Write - Size Per Thread: 32MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 64 -t 4</Arguments>
    <Description>Test: Write - Size Per Thread: 64MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 64 -t 8</Arguments>
    <Description>Test: Write - Size Per Thread: 64MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 64 -t 16</Arguments>
    <Description>Test: Write - Size Per Thread: 64MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 64 -t 32</Arguments>
    <Description>Test: Write - Size Per Thread: 64MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 128 -t 4</Arguments>
    <Description>Test: Write - Size Per Thread: 128MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 128 -t 8</Arguments>
    <Description>Test: Write - Size Per Thread: 128MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 128 -t 16</Arguments>
    <Description>Test: Write - Size Per Thread: 128MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 128 -t 32</Arguments>
    <Description>Test: Write - Size Per Thread: 128MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 256 -t 4</Arguments>
    <Description>Test: Write - Size Per Thread: 256MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 256 -t 8</Arguments>
    <Description>Test: Write - Size Per Thread: 256MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 256 -t 16</Arguments>
    <Description>Test: Write - Size Per Thread: 256MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -k1 -f 256 -t 32</Arguments>
    <Description>Test: Write - Size Per Thread: 256MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 32 -t 4</Arguments>
    <Description>Test: Random Write - Size Per Thread: 32MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 32 -t 8</Arguments>
    <Description>Test: Random Write - Size Per Thread: 32MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 32 -t 16</Arguments>
    <Description>Test: Random Write - Size Per Thread: 32MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 32 -t 32</Arguments>
    <Description>Test: Random Write - Size Per Thread: 32MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 64 -t 4</Arguments>
    <Description>Test: Random Write - Size Per Thread: 64MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 64 -t 8</Arguments>
    <Description>Test: Random Write - Size Per Thread: 64MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 64 -t 16</Arguments>
    <Description>Test: Random Write - Size Per Thread: 64MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 64 -t 32</Arguments>
    <Description>Test: Random Write - Size Per Thread: 64MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 128 -t 4</Arguments>
    <Description>Test: Random Write - Size Per Thread: 128MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 128 -t 8</Arguments>
    <Description>Test: Random Write - Size Per Thread: 128MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 128 -t 16</Arguments>
    <Description>Test: Random Write - Size Per Thread: 128MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 128 -t 32</Arguments>
    <Description>Test: Random Write - Size Per Thread: 128MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 256 -t 4</Arguments>
    <Description>Test: Random Write - Size Per Thread: 256MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 256 -t 8</Arguments>
    <Description>Test: Random Write - Size Per Thread: 256MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 256 -t 16</Arguments>
    <Description>Test: Random Write - Size Per Thread: 256MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k2 -f 256 -t 32</Arguments>
    <Description>Test: Random Write - Size Per Thread: 256MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 32 -t 4</Arguments>
    <Description>Test: Read - Size Per Thread: 32MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 32 -t 8</Arguments>
    <Description>Test: Read - Size Per Thread: 32MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 32 -t 16</Arguments>
    <Description>Test: Read - Size Per Thread: 32MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 32 -t 32</Arguments>
    <Description>Test: Read - Size Per Thread: 32MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 64 -t 4</Arguments>
    <Description>Test: Read - Size Per Thread: 64MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 64 -t 8</Arguments>
    <Description>Test: Read - Size Per Thread: 64MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 64 -t 16</Arguments>
    <Description>Test: Read - Size Per Thread: 64MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 64 -t 32</Arguments>
    <Description>Test: Read - Size Per Thread: 64MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 128 -t 4</Arguments>
    <Description>Test: Read - Size Per Thread: 128MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 128 -t 8</Arguments>
    <Description>Test: Read - Size Per Thread: 128MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 128 -t 16</Arguments>
    <Description>Test: Read - Size Per Thread: 128MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 128 -t 32</Arguments>
    <Description>Test: Read - Size Per Thread: 128MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 256 -t 4</Arguments>
    <Description>Test: Read - Size Per Thread: 256MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 256 -t 8</Arguments>
    <Description>Test: Read - Size Per Thread: 256MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 256 -t 16</Arguments>
    <Description>Test: Read - Size Per Thread: 256MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k3 -k1 -f 256 -t 32</Arguments>
    <Description>Test: Read - Size Per Thread: 256MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 32 -t 4</Arguments>
    <Description>Test: Random Read - Size Per Thread: 32MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 32 -t 8</Arguments>
    <Description>Test: Random Read - Size Per Thread: 32MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 32 -t 16</Arguments>
    <Description>Test: Random Read - Size Per Thread: 32MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 32 -t 32</Arguments>
    <Description>Test: Random Read - Size Per Thread: 32MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 64 -t 4</Arguments>
    <Description>Test: Random Read - Size Per Thread: 64MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 64 -t 8</Arguments>
    <Description>Test: Random Read - Size Per Thread: 64MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 64 -t 16</Arguments>
    <Description>Test: Random Read - Size Per Thread: 64MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 64 -t 32</Arguments>
    <Description>Test: Random Read - Size Per Thread: 64MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 128 -t 4</Arguments>
    <Description>Test: Random Read - Size Per Thread: 128MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 128 -t 8</Arguments>
    <Description>Test: Random Read - Size Per Thread: 128MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 128 -t 16</Arguments>
    <Description>Test: Random Read - Size Per Thread: 128MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 128 -t 32</Arguments>
    <Description>Test: Random Read - Size Per Thread: 128MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 256 -t 4</Arguments>
    <Description>Test: Random Read - Size Per Thread: 256MB - Thread Count: 4</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 256 -t 8</Arguments>
    <Description>Test: Random Read - Size Per Thread: 256MB - Thread Count: 8</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 256 -t 16</Arguments>
    <Description>Test: Random Read - Size Per Thread: 256MB - Thread Count: 16</Description>
  </Execute>
  <Execute>
    <Test>pts/tiobench</Test>
    <Arguments>-k2 -k1 -f 256 -t 32</Arguments>
    <Description>Test: Random Read - Size Per Thread: 256MB - Thread Count: 32</Description>
  </Execute>
  <Execute>
    <Test>pts/ttsiod-renderer</Test>
  </Execute>
  <Execute>
    <Test>pts/sqlite</Test>
    <Description>Test Target: Default Test Directory</Description>
  </Execute>
  <Execute>
    <Test>pts/smallpt</Test>
  </Execute>
  <Execute>
    <Test>pts/stresscpu2</Test>
    <Arguments>00:30:00</Arguments>
    <Description>Run-Time: 30 Minutes</Description>
  </Execute>
  <Execute>
    <Test>pts/network-loopback</Test>
  </Execute>
  <Execute>
    <Test>pts/graphics-magick</Test>
    <Arguments>-colorspace HWB</Arguments>
    <Description>Operation: HWB Color Space</Description>
  </Execute>
  <Execute>
    <Test>pts/graphics-magick</Test>
    <Arguments>-blur 0x1.0</Arguments>
    <Description>Operation: Blur</Description>
  </Execute>
  <Execute>
    <Test>pts/graphics-magick</Test>
    <Arguments>-lat 10x10-5%</Arguments>
    <Description>Operation: Local Adaptive Thresholding</Description>
  </Execute>
  <Execute>
    <Test>pts/graphics-magick</Test>
    <Arguments>-resize 50%</Arguments>
    <Description>Operation: Resizing</Description>
  </Execute>
  <Execute>
    <Test>pts/graphics-magick</Test>
    <Arguments>-sharpen 0x1.0</Arguments>
    <Description>Operation: Sharpen</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf</Test>
    <Arguments>-putimage500</Arguments>
    <Description>Test: 500px PutImage Square</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf</Test>
    <Arguments>-scroll500</Arguments>
    <Description>Test: Scrolling 500 x 500 px</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf</Test>
    <Arguments>-aatrapezoid300</Arguments>
    <Description>Test: Fill 300 x 300px AA Trapezoid</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf</Test>
    <Arguments>-copywinwin500</Arguments>
    <Description>Test: 500px Copy From Window To Window</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf</Test>
    <Arguments>-comppixwin500</Arguments>
    <Description>Test: 500px Compositing From Pixmap To Window</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf</Test>
    <Arguments>-compwinwin500</Arguments>
    <Description>Test: 500px Compositing From Window To Window</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf</Test>
    <Arguments>-copypixpix500</Arguments>
    <Description>Test: Copy 500x500 From Pixmap To Pixmap</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf</Test>
    <Arguments>-putimagexy500</Arguments>
    <Description>Test: PutImage XY 500x500 Square</Description>
  </Execute>
  <Execute>
    <Test>pts/x11perf</Test>
    <Arguments>-aa10text</Arguments>
    <Description>Test: Char in 80-char aa line</Description>
  </Execute>
  <Execute>
    <Test>pts/video-cpu-usage</Test>
    <Arguments>-vo gl2</Arguments>
    <Description>Video Decoding: GL2</Description>
  </Execute>
  <Execute>
    <Test>pts/video-cpu-usage</Test>
    <Arguments>-vo xv</Arguments>
    <Description>Video Decoding: X-Video</Description>
  </Execute>
  <Execute>
    <Test>pts/video-cpu-usage</Test>
    <Arguments>-vo xvmc</Arguments>
    <Description>Video Decoding: XvMC</Description>
  </Execute>
  <Execute>
    <Test>pts/video-cpu-usage</Test>
    <Arguments>-vo vdpau -va vdpau</Arguments>
    <Description>Video Decoding: VDPAU</Description>
  </Execute>
  <Execute>
    <Test>pts/video-cpu-usage</Test>
    <Arguments>-vo vaapi -va vaapi</Arguments>
    <Description>Video Decoding: VA-API</Description>
  </Execute>
  <Execute>
    <Test>pts/video-cpu-usage</Test>
    <Arguments>-vo corevideo</Arguments>
    <Description>Video Decoding: OS X CoreVideo</Description>
  </Execute>
  <Execute>
    <Test>pts/john-the-ripper</Test>
    <Arguments>TRADITIONAL_DES_MANY_SALTS</Arguments>
    <Description>Test: Traditional DES</Description>
  </Execute>
  <Execute>
    <Test>pts/john-the-ripper</Test>
    <Arguments>MD5</Arguments>
    <Description>Test: MD5</Description>
  </Execute>
  <Execute>
    <Test>pts/john-the-ripper</Test>
    <Arguments>BLOWFISH</Arguments>
    <Description>Test: Blowfish</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 4k -s 512M -i0</Arguments>
    <Description>Record Size: 4Kb - File Size: 512MB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 4k -s 512M -i0 -i1</Arguments>
    <Description>Record Size: 4Kb - File Size: 512MB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 4k -s 2048M -i0</Arguments>
    <Description>Record Size: 4Kb - File Size: 2GB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 4k -s 2048M -i0 -i1</Arguments>
    <Description>Record Size: 4Kb - File Size: 2GB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 4k -s 4096M -i0</Arguments>
    <Description>Record Size: 4Kb - File Size: 4GB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 4k -s 4096M -i0 -i1</Arguments>
    <Description>Record Size: 4Kb - File Size: 4GB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 4k -s 8192M -i0</Arguments>
    <Description>Record Size: 4Kb - File Size: 8GB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 4k -s 8192M -i0 -i1</Arguments>
    <Description>Record Size: 4Kb - File Size: 8GB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 64k -s 512M -i0</Arguments>
    <Description>Record Size: 64Kb - File Size: 512MB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 64k -s 512M -i0 -i1</Arguments>
    <Description>Record Size: 64Kb - File Size: 512MB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 64k -s 2048M -i0</Arguments>
    <Description>Record Size: 64Kb - File Size: 2GB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 64k -s 2048M -i0 -i1</Arguments>
    <Description>Record Size: 64Kb - File Size: 2GB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 64k -s 4096M -i0</Arguments>
    <Description>Record Size: 64Kb - File Size: 4GB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 64k -s 4096M -i0 -i1</Arguments>
    <Description>Record Size: 64Kb - File Size: 4GB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 64k -s 8192M -i0</Arguments>
    <Description>Record Size: 64Kb - File Size: 8GB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 64k -s 8192M -i0 -i1</Arguments>
    <Description>Record Size: 64Kb - File Size: 8GB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 1m -s 512M -i0</Arguments>
    <Description>Record Size: 1MB - File Size: 512MB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 1m -s 512M -i0 -i1</Arguments>
    <Description>Record Size: 1MB - File Size: 512MB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 1m -s 2048M -i0</Arguments>
    <Description>Record Size: 1MB - File Size: 2GB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 1m -s 2048M -i0 -i1</Arguments>
    <Description>Record Size: 1MB - File Size: 2GB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 1m -s 4096M -i0</Arguments>
    <Description>Record Size: 1MB - File Size: 4GB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 1m -s 4096M -i0 -i1</Arguments>
    <Description>Record Size: 1MB - File Size: 4GB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 1m -s 8192M -i0</Arguments>
    <Description>Record Size: 1MB - File Size: 8GB - Disk Test: Write Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/iozone</Test>
    <Arguments>-r 1m -s 8192M -i0 -i1</Arguments>
    <Description>Record Size: 1MB - File Size: 8GB - Disk Test: Read Performance</Description>
  </Execute>
  <Execute>
    <Test>pts/cachebench</Test>
    <Arguments>-r</Arguments>
    <Description>Test: Read</Description>
  </Execute>
  <Execute>
    <Test>pts/cachebench</Test>
    <Arguments>-w</Arguments>
    <Description>Test: Write</Description>
  </Execute>
  <Execute>
    <Test>pts/cachebench</Test>
    <Arguments>-b</Arguments>
    <Description>Test: Read / Modify / Write</Description>
  </Execute>
  <Execute>
    <Test>pts/c-ray</Test>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>COPY -b 3</Arguments>
    <Description>Type: Copy - Benchmark: Integer</Description>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>COPY -b 6</Arguments>
    <Description>Type: Copy - Benchmark: Floating Point</Description>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>SCALE -b 3</Arguments>
    <Description>Type: Scale - Benchmark: Integer</Description>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>SCALE -b 6</Arguments>
    <Description>Type: Scale - Benchmark: Floating Point</Description>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>ADD -b 3</Arguments>
    <Description>Type: Add - Benchmark: Integer</Description>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>ADD -b 6</Arguments>
    <Description>Type: Add - Benchmark: Floating Point</Description>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>TRIAD -b 3</Arguments>
    <Description>Type: Triad - Benchmark: Integer</Description>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>TRIAD -b 6</Arguments>
    <Description>Type: Triad - Benchmark: Floating Point</Description>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>AVERAGE -b 3</Arguments>
    <Description>Type: Average - Benchmark: Integer</Description>
  </Execute>
  <Execute>
    <Test>pts/ramspeed</Test>
    <Arguments>AVERAGE -b 6</Arguments>
    <Description>Type: Average - Benchmark: Floating Point</Description>
  </Execute>
  <Execute>
    <Test>pts/fio</Test>
    <Arguments>examples/iometer-file-access-server</Arguments>
    <Description>Test: Intel IOMeter File Server Access Pattern</Description>
  </Execute>
  <Execute>
    <Test>pts/fio</Test>
    <Arguments>examples/netio</Arguments>
    <Description>Test: Example Network Job</Description>
  </Execute>
</PhoronixTestSuite>
